@import "../../files/vendor/twitter-bootstrap/less/mixins";
@import "../../files/vendor/twitter-bootstrap/less/variables";

/* These aren't provided by mixins.less */
.make-xs-column-push(@columns) {
  left: percentage((@columns / @grid-columns));
}
.make-xs-column-pull(@columns) {
  right: percentage((@columns / @grid-columns));
}
.make-xs-column-offset(@columns) {
  margin-left: percentage((@columns / @grid-columns));
}


/* The .make-rtl-md-col mixin helps us to specify div widths that will
 * automatically reorient themselves in a right-to-left layout.
 * Note that targets to the left of center get pushed, targets to the right
 * get pulled, and targets dead center don't get moved at all.
 * @cols-to-the-left: the number of columns to the left of the target section
 * @columns: the number of columns in the target section
 * @cols-to-the-right: the number of columns to the right of the target section
 */
.make-rtl-md-col(@cols-to-the-left; @columns; @cols-to-the-right) {
  .make-md-column(@columns);
}

.make-rtl-md-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left < @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-md-column-push(@cols-to-the-right - @cols-to-the-left);
  }
}

.make-rtl-md-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left > @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-md-column-pull(@cols-to-the-left - @cols-to-the-right);
  }
}

.make-rtl-sm-col(@cols-to-the-left; @columns; @cols-to-the-right) {
  .make-sm-column(@columns);
}

.make-rtl-sm-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left < @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-sm-column-push(@cols-to-the-right - @cols-to-the-left);
  }
}

.make-rtl-sm-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left > @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-sm-column-pull(@cols-to-the-left - @cols-to-the-right);
  }
}

.make-rtl-xs-col(@cols-to-the-left; @columns; @cols-to-the-right) {
  .make-xs-column(@columns);
}

.make-rtl-xs-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left < @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-xs-column-push(@cols-to-the-right - @cols-to-the-left);
  }
}

.make-rtl-xs-col(@cols-to-the-left; @columns; @cols-to-the-right) when (@cols-to-the-left > @cols-to-the-right) {
  body[dir="rtl"] & {
    .make-xs-column-pull(@cols-to-the-left - @cols-to-the-right);
  }
}

/*
 * These are a slew of helper classes that can be used directly in HTML rather
 * that relying on special classes that directly use the mixins.
 * There are potentially tons of these things, so we'll create them as needed.
 */

.col-md-6-left {
  .make-rtl-md-col(0, 6, 6);
}

.col-md-6-right {
  .make-rtl-md-col(6, 6, 0);
}

.col-md-10-left {
  .make-rtl-md-col(0, 10, 2);
}

.col-md-2-left {
  .make-rtl-md-col(0, 2, 10);
}

.col-md-2-right {
  .make-rtl-md-col(10, 2, 0);
}

// Centered columns don't need special RTL handling
.col-md-6-center {
  .make-md-column-offset(3);
  .make-md-column(6);
}

.col-sm-6-center {
  .make-sm-column-offset(3);
  .make-sm-column(6);
}

.col-xs-6-center {
  .make-xs-column-offset(3);
  .make-xs-column(6);
}

.col-xs-8-center {
  .make-xs-column-offset(2);
  .make-xs-column(8);
}


/*
This mixin provides a way to RTL-friendly right-alignment of text.
`@stopwidth` is the width at which it should turn off right-alignment.
*/
.text-right-rtl(@stopwidth) {
  .text-right();
  body[dir="rtl"] & {
    // Reverse if RTL
    .text-left();
  }

  // When the column collapses on XS screens, just align normally.
  @media (max-width: @stopwidth) {
    .text-left();
    body[dir="rtl"] & {
      .text-right();
    }
  }
}

.text-right-rtl {
  .text-right-rtl(@screen-xs-max);
}

//
// Fix some broken Bootstrap RTL behaviour
//

// navbar
@media (min-width: @grid-float-breakpoint) {
  body[dir="rtl"] {
    .navbar-left {
      margin-left: -@navbar-padding-horizontal;
    }
    .navbar-right {
      margin-right: 0;

      ~ .navbar-right {
        margin-left: 0;
      }
    }
  }
}
